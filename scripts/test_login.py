#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
"""
import os
import sys
import django

# –î–ª—è Windows - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8
if sys.platform == 'win32':
    import io
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth import authenticate, get_user_model
from django.test import Client

CustomUser = get_user_model()

def test_authentication(username, password):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print(f"\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è '{username}'...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = CustomUser.objects.get(username=username)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username} ({user.email})")
        print(f"   Is Active: {user.is_active}")
        print(f"   Has Usable Password: {user.has_usable_password()}")
    except CustomUser.DoesNotExist:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    auth_user = authenticate(username=username, password=password)
    
    if auth_user is not None:
        print(f"‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
        print(f"   Authenticated user: {auth_user.username}")
        return True
    else:
        print(f"‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å!")
        print(f"   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print(f"   - –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å")
        print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω (is_active=False)")
        print(f"   - –ü–∞—Ä–æ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

def test_login_view():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç view —Ñ—É–Ω–∫—Ü–∏—é –≤—Ö–æ–¥–∞."""
    print(f"\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ view —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Ö–æ–¥–∞...")
    
    client = Client()
    
    # GET –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    response = client.get('/accounts/login/')
    print(f"   GET /accounts/login/ - Status: {response.status_code}")
    
    if response.status_code == 200:
        print(f"   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
    else:
        print(f"   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞!")
    
    # POST –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏
    print(f"\n   –¢–µ—Å—Ç–∏—Ä—É–µ–º POST –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è 'reazonvan'...")
    response = client.post('/accounts/login/', {
        'username': 'reazonvan',
        'password': 'admin'  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
    })
    
    print(f"   POST /accounts/login/ - Status: {response.status_code}")
    
    if response.status_code == 302:
        print(f"   ‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç (–≤–æ–∑–º–æ–∂–Ω–æ —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥)")
        print(f"   Redirect to: {response.url}")
    elif response.status_code == 200:
        print(f"   ‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞ (–≤–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞)")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
        if b'error' in response.content.lower() or b'invalid' in response.content.lower():
            print(f"   ‚ùå –§–æ—Ä–º–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏")
    else:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–¥")

def check_urls():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö URL."""
    print(f"\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL...")
    
    client = Client()
    urls = [
        ('/', '–ì–ª–∞–≤–Ω–∞—è'),
        ('/accounts/login/', '–í—Ö–æ–¥'),
        ('/accounts/register/', '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'),
    ]
    
    for url, name in urls:
        try:
            response = client.get(url)
            status = '‚úÖ' if response.status_code == 200 else '‚ùå'
            print(f"   {status} {name}: {url} - {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå {name}: {url} - ERROR: {e}")

if __name__ == '__main__':
    print("=" * 60)
    print("üß™ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –í–•–û–î–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URLs
    check_urls()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º view
    test_login_view()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n" + "=" * 60)
    print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ username –∏ password –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("–ù–∞–ø—Ä–∏–º–µ—Ä: reazonvan")
    
    if len(sys.argv) > 2:
        username = sys.argv[1]
        password = sys.argv[2]
        test_authentication(username, password)
    else:
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python scripts/test_login.py <username> <password>")
        print("–ü—Ä–∏–º–µ—Ä: python scripts/test_login.py reazonvan mypassword")
    
    print("\n" + "=" * 60)

