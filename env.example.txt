# ===================================
# LootLink Environment Configuration
# ===================================
# Скопируйте этот файл в .env и заполните значения

# Django Settings
SECRET_KEY=your-secret-key-here-generate-with-django
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1

# Database Settings (PostgreSQL)
DB_NAME=lootlink_db
DB_USER=postgres
DB_PASSWORD=your-strong-password-here
DB_HOST=localhost
DB_PORT=5432

# Email Settings (для уведомлений)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
DEFAULT_FROM_EMAIL=noreply@lootlink.com

# AWS S3 Settings (опционально, для production)
USE_S3=False
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_STORAGE_BUCKET_NAME=lootlink-media
AWS_S3_REGION_NAME=us-east-1

# Redis Settings (опционально, для production)
USE_REDIS=False
REDIS_URL=redis://redis:6379/1

# Sentry Monitoring (опционально, для production)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
ENVIRONMENT=development
RELEASE_VERSION=1.0.0

# ===================================
# Инструкции:
# ===================================

# 1. Генерация SECRET_KEY:
#    python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"

# 2. Для Gmail App Password:
#    https://myaccount.google.com/apppasswords

# 3. Для PostgreSQL:
#    createdb lootlink_db
#    createuser lootlink_user -P

# 4. Production настройки:
#    DEBUG=False
#    ALLOWED_HOSTS=lootlink.com,www.lootlink.com
#    USE_S3=True
#    USE_REDIS=True
