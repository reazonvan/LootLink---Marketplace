/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
 */

document.addEventListener('DOMContentLoaded', function() {
    const favoriteBtn = document.getElementById('favorite-btn');
    
    if (!favoriteBtn) return;
    
    favoriteBtn.addEventListener('click', function() {
        const listingId = this.dataset.listingId;
        const isFavorited = this.dataset.isFavorited === 'true';
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
        favoriteBtn.disabled = true;
        
        // AJAX –∑–∞–ø—Ä–æ—Å
        fetch(`/listing/${listingId}/favorite/`, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRFToken': getCookie('csrftoken'),
                'Content-Type': 'application/json',
            },
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
                const icon = favoriteBtn.querySelector('i');
                const text = document.getElementById('favorite-text');
                
                if (data.is_favorited) {
                    // –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                    icon.classList.remove('bi-heart');
                    icon.classList.add('bi-heart-fill');
                    text.textContent = '–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º';
                    favoriteBtn.dataset.isFavorited = 'true';
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    if (window.showToast) {
                        showToast('success', data.message);
                    }
                } else {
                    // –£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                    icon.classList.remove('bi-heart-fill');
                    icon.classList.add('bi-heart');
                    text.textContent = '–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ';
                    favoriteBtn.dataset.isFavorited = 'false';
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    if (window.showToast) {
                        showToast('info', data.message);
                    }
                }
            } else {
                // –û—à–∏–±–∫–∞
                if (window.showToast) {
                    showToast('error', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞:', error);
            if (window.showToast) {
                showToast('error', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.');
            }
        })
        .finally(() => {
            // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ–±—Ä–∞—Ç–Ω–æ
            favoriteBtn.disabled = false;
        });
    });
});

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ CSRF —Ç–æ–∫–µ–Ω–∞ –∏–∑ cookies
 */
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

console.log('üíñ Favorites script –∑–∞–≥—Ä—É–∂–µ–Ω');

