/**
 * –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞
 * 1. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter
 * 2. –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
 * 3. –°–∫—Ä–æ–ª–ª –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
 */

// –ü–æ–ª—É—á–µ–Ω–∏–µ CSRF —Ç–æ–∫–µ–Ω–∞ –∏–∑ cookies
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

document.addEventListener('DOMContentLoaded', function() {
    console.log('üí¨ Chat improvements initialized');
    
    // 1. –û–¢–ü–†–ê–í–ö–ê –ü–û ENTER
    const messageForm = document.querySelector('#message-form');
    const messageTextarea = document.querySelector('#id_content');
    
    if (messageTextarea && messageForm) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ñ–æ—Ä–º–∞ —á–∞—Ç–∞');
        
        messageTextarea.addEventListener('keydown', function(e) {
            // Enter –±–µ–∑ Shift = –æ—Ç–ø—Ä–∞–≤–∫–∞
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç
                if (this.value.trim()) {
                    messageForm.submit();
                } else {
                    console.log('‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
                }
            }
        });
        
        // –ü–æ–¥—Å–∫–∞–∑–∫–∞
        messageTextarea.placeholder = '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ... (Enter - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, Shift+Enter - –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞)';
    }
    
    // 2. –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô (–∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã)
    const messagesContainer = document.querySelector('.messages-list');
    const conversationId = document.querySelector('[data-conversation-id]');
    
    if (messagesContainer && conversationId) {
        const chatId = conversationId.getAttribute('data-conversation-id');
        console.log(`üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï Memory Leak - –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π interval –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ
        if (window.chatInterval) {
            clearInterval(window.chatInterval);
            console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ chat interval');
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º interval ID
        window.chatInterval = setInterval(function() {
            loadNewMessages(chatId);
        }, 3000); // 3 —Å–µ–∫—É–Ω–¥—ã
        
        // –û—á–∏—â–∞–µ–º interval –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (beforeunload)
        window.addEventListener('beforeunload', function() {
            if (window.chatInterval) {
                clearInterval(window.chatInterval);
                console.log('üßπ Chat interval –æ—á–∏—â–µ–Ω –ø—Ä–∏ beforeunload');
            }
        });
        
        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê: –û—á–∏—â–∞–µ–º –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (pagehide)
        window.addEventListener('pagehide', function() {
            if (window.chatInterval) {
                clearInterval(window.chatInterval);
                console.log('üßπ Chat interval –æ—á–∏—â–µ–Ω –ø—Ä–∏ pagehide');
            }
        });
        
        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê: –û—á–∏—â–∞–µ–º –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ –Ω–∞ 5+ –º–∏–Ω—É—Ç
        let visibilityTimer = null;
        document.addEventListener('visibilitychange', function() {
            if (document.hidden) {
                // –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞ - —Å—Ç–∞–≤–∏–º —Ç–∞–π–º–µ—Ä –Ω–∞ 5 –º–∏–Ω—É—Ç
                visibilityTimer = setTimeout(function() {
                    if (window.chatInterval) {
                        clearInterval(window.chatInterval);
                        console.log('üßπ Chat interval –æ—á–∏—â–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞ 5+ –º–∏–Ω—É—Ç)');
                    }
                }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç
            } else {
                // –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–Ω–æ–≤–∞ –≤–∏–¥–∏–º–∞ - –æ—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
                if (visibilityTimer) {
                    clearTimeout(visibilityTimer);
                    visibilityTimer = null;
                }
            }
        });
    }
    
    // 3. –°–ö–†–û–õ–õ –ö –ü–û–°–õ–ï–î–ù–ï–ú–£ –°–û–û–ë–©–ï–ù–ò–Æ
    scrollToBottom();
});

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ AJAX
 */
function loadNewMessages(conversationId) {
    const lastMessageId = getLastMessageId();
    const csrftoken = getCookie('csrftoken');
    
    fetch(`/chat/api/messages/${conversationId}/?after=${lastMessageId}`, {
        method: 'GET',
        headers: {
            'X-Requested-With': 'XMLHttpRequest',
            'X-CSRFToken': csrftoken
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.messages && data.messages.length > 0) {
            console.log(`üì¨ –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${data.messages.length}`);
            
            data.messages.forEach(message => {
                addMessageToChat(message);
            });
            
            scrollToBottom();
            
            // Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
            if (data.messages.length > 0 && !data.messages[0].is_own) {
                // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
                const safeSender = escapeHtml(data.messages[0].sender);
                showToast(`–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${safeSender}`, 'info', 'chat', 'bg-primary');
            }
        }
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    });
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function getLastMessageId() {
    const messages = document.querySelectorAll('[data-message-id]');
    if (messages.length > 0) {
        return messages[messages.length - 1].getAttribute('data-message-id');
    }
    return 0;
}

/**
 * –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è XSS
 */
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

/**
 * –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
 */
function addMessageToChat(message) {
    const messagesContainer = document.querySelector('.messages-list');
    
    // –í–ê–ñ–ù–û: –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç XSS
    const safeContent = escapeHtml(message.content);
    const safeSender = escapeHtml(message.sender);
    const safeTime = escapeHtml(message.created_at);
    
    const messageHTML = `
        <div class="message ${message.is_own ? 'message-own' : 'message-other'}" data-message-id="${message.id}">
            <div class="message-content">
                <div class="message-text">${safeContent}</div>
                <div class="message-time">${safeTime}</div>
            </div>
        </div>
    `;
    
    messagesContainer.insertAdjacentHTML('beforeend', messageHTML);
}

/**
 * –°–∫—Ä–æ–ª–ª –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
 */
function scrollToBottom() {
    const messagesContainer = document.querySelector('.messages-list');
    if (messagesContainer) {
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∏–∑ toast-notifications.js)
 */
if (typeof showToast === 'undefined') {
    function showToast(message, type = 'info', icon = 'info-circle', bgClass = 'bg-primary') {
        console.log('Toast fallback:', message);
    }
}
