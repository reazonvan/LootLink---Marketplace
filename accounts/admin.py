from django.contrib import admin
from django.contrib.auth.admin import UserAdmin
from django.utils.html import format_html
from .models import CustomUser, Profile, PasswordResetCode, EmailVerification


@admin.register(CustomUser)
class CustomUserAdmin(UserAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏."""
    model = CustomUser
    list_display = ['username', 'email', 'role_display', 'is_verified_display', 'rating_display', 'date_joined']
    list_filter = ['is_staff', 'is_superuser', 'is_active', 'profile__is_verified', 'profile__is_moderator', 'date_joined']
    search_fields = ['username', 'email', 'first_name', 'last_name']
    ordering = ['-date_joined']
    
    def role_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–æ–ª–∏"""
        if obj.is_superuser:
            return format_html('<span style="color: #dc2626; font-weight: bold;">üëë –í–ª–∞–¥–µ–ª–µ—Ü</span>')
        elif obj.is_staff:
            return format_html('<span style="color: #2563eb; font-weight: bold;">üõ°Ô∏è –ê–¥–º–∏–Ω</span>')
        elif hasattr(obj, 'profile') and obj.profile.is_moderator:
            return format_html('<span style="color: #059669; font-weight: bold;">‚öñÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä</span>')
        elif hasattr(obj, 'profile') and obj.profile.is_verified:
            return format_html('<span style="color: #64748b;">‚úì –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω</span>')
        else:
            return format_html('<span style="color: #9ca3af;">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</span>')
    role_display.short_description = '–†–æ–ª—å'
    
    def is_verified_display(self, obj):
        """–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        if hasattr(obj, 'profile') and obj.profile.is_verified:
            return format_html('<span style="color: #10b981;">‚úì</span>')
        return format_html('<span style="color: #ef4444;">‚úó</span>')
    is_verified_display.short_description = 'Verified'
    
    def rating_display(self, obj):
        """–†–µ–π—Ç–∏–Ω–≥"""
        if hasattr(obj, 'profile'):
            rating = obj.profile.rating
            stars = '‚≠ê' * int(rating)
            return format_html(f'{stars} {rating:.1f}')
        return '-'
    rating_display.short_description = '–†–µ–π—Ç–∏–Ω–≥'
    
    # –ó–∞–ø—Ä–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    def has_delete_permission(self, request, obj=None):
        return False
    
    # –î–µ–ª–∞–µ–º username –∏ email —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
    def get_readonly_fields(self, request, obj=None):
        if obj:  # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            return self.readonly_fields + ('username', 'email')
        return self.readonly_fields


@admin.register(Profile)
class ProfileAdmin(admin.ModelAdmin):
    list_display = ['user', 'role_badge', 'is_verified', 'is_moderator', 'phone', 'rating', 'total_sales', 'total_purchases']
    list_filter = ['is_verified', 'is_moderator', 'rating']
    search_fields = ['user__username', 'phone']
    list_editable = ['is_verified', 'is_moderator']
    readonly_fields = ['phone', 'total_sales', 'total_purchases', 'rating', 'created_at']
    
    def role_badge(self, obj):
        """–ë–µ–π–¥–∂ —Ä–æ–ª–∏"""
        if obj.user.is_superuser:
            return format_html('<span style="background: #dc2626; color: white; padding: 3px 8px; border-radius: 4px; font-size: 11px; font-weight: bold;">–í–õ–ê–î–ï–õ–ï–¶</span>')
        elif obj.user.is_staff:
            return format_html('<span style="background: #2563eb; color: white; padding: 3px 8px; border-radius: 4px; font-size: 11px; font-weight: bold;">–ê–î–ú–ò–ù</span>')
        elif obj.is_moderator:
            return format_html('<span style="background: #059669; color: white; padding: 3px 8px; border-radius: 4px; font-size: 11px; font-weight: bold;">–ú–û–î–ï–†–ê–¢–û–†</span>')
        else:
            return format_html('<span style="background: #9ca3af; color: white; padding: 3px 8px; border-radius: 4px; font-size: 11px;">–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨</span>')
    role_badge.short_description = '–†–æ–ª—å'
    
    # –ó–∞–ø—Ä–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
    def has_delete_permission(self, request, obj=None):
        return False
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('user', 'avatar', 'bio', 'balance')
        }),
        ('–ö–æ–Ω—Ç–∞–∫—Ç—ã', {
            'fields': ('phone', 'telegram', 'discord')
        }),
        ('–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞', {
            'fields': ('is_verified', 'is_moderator', 'verification_date'),
            'description': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        }),
        ('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', {
            'fields': ('rating', 'total_sales', 'total_purchases'),
            'classes': ('collapse',)
        }),
    )


@admin.register(PasswordResetCode)
class PasswordResetCodeAdmin(admin.ModelAdmin):
    list_display = ['user', 'code', 'created_at', 'expires_at', 'is_used']
    list_filter = ['is_used', 'created_at']
    search_fields = ['user__username', 'user__email', 'code']
    readonly_fields = ['created_at']
    ordering = ['-created_at']
    
    def has_add_permission(self, request):
        # –ö–æ–¥—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É
        return False


@admin.register(EmailVerification)
class EmailVerificationAdmin(admin.ModelAdmin):
    list_display = ['user', 'is_verified', 'created_at', 'verified_at']
    list_filter = ['is_verified', 'created_at']
    search_fields = ['user__username', 'user__email', 'token']
    readonly_fields = ['token', 'created_at', 'verified_at']
    ordering = ['-created_at']
    
    def has_add_permission(self, request):
        # –°–æ–∑–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        return False

